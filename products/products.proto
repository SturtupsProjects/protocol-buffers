syntax = "proto3";

package products;

option go_package = "internal/generated/products";

// -------------------- Common Messages --------------------------

message Message {
  string message = 1;
}

message Error {
  string error = 1;
}

// -------------------- Product Categories -----------------------
message Category {
  string id = 1;
  string name = 2;
  string company_id = 3; // Company ID added
  string image_url = 4;
  string created_by = 5;
  string created_at = 6;
  string branch_id = 7; // Added branch_id
}

message UpdateCategoryRequest {
  string id = 1;
  string name = 2;
  string company_id = 3; // Company ID added
  string image_url = 4;
  string created_by = 5;
  string branch_id = 6; // Added branch_id
}

message CreateCategoryRequest {
  string name = 1;
  string company_id = 2;
  string image_url = 3;
  string created_by = 4;
  string branch_id = 5; // Added branch_id
}

message GetCategoryRequest {
  string id = 1;
  string company_id = 2; // Company ID added
  string branch_id = 3; // Added branch_id
}

message CategoryList {
  repeated Category categories = 1;
  int64 total_count = 2;
}

message CategoryName {
  string name = 1;
  string company_id = 2; // Company ID added
  string branch_id = 3; // Added branch_id
  int64 limit = 4;
  int64 page = 5;
}

// -------------------- Products ---------------------------------
message Product {
  string id = 1;
  string category_id = 2;
  string name = 3;
  string bill_format = 4;
  double incoming_price = 5; // Changed to double
  double standard_price = 6; // Changed to double
  int64 total_count = 7;
  string company_id = 8; // Company ID added
  string image_url = 9;
  string created_by = 10;
  string created_at = 11;
  string branch_id = 12; // Added branch_id
}

message CreateProductRequest {
  string category_id = 1;
  string name = 2;
  string bill_format = 3;
  string image_url = 4;
  double incoming_price = 5; // Changed to double
  double standard_price = 6; // Changed to double
  string company_id = 7; // Company ID added
  string created_by = 8;
  string total_count = 9;
  string branch_id = 10; // Added branch_id
}

message CreateProductRequestBulk {
  string name = 1;
  string bill_format = 2;
  string image_url = 3;
  double incoming_price = 4; // Changed to double
  double standard_price = 5; // Changed to double
  int64 total_count = 6;
  string branch_id = 7; // Added branch_id
}

// CreateBulkProductsRequest for bulk creation
message CreateBulkProductsRequest {
  string category_id = 1;
  string company_id = 2;
  string created_by = 3;
  string branch_id = 4; // Added branch_id
  repeated CreateProductRequestBulk products = 5;
}

// BulkCreateResponse
message BulkCreateResponse {
  bool success = 1;
  repeated Product products = 2;
  string message = 3;
}

message UpdateProductRequest {
  string id = 1;
  string category_id = 2;
  string name = 3;
  string image_url = 4;
  string bill_format = 5;
  double incoming_price = 6; // Changed to double
  double standard_price = 7; // Changed to double
  int64 quantity = 8;
  string company_id = 9; // Company ID added
  string branch_id = 10; // Added branch_id
}

message GetProductRequest {
  string id = 1;
  string company_id = 2; // Company ID added
  string branch_id = 3; // Added branch_id
}

message ProductFilter {
  string category_id = 1;
  string name = 2;
  string company_id = 3; // Company ID added
  string created_by = 4;
  string created_at = 5;
  int64 limit = 6;
  int64 page = 7;
  string branch_id = 8; // Added branch_id
  int64 total_count = 9;
}

message ProductList {
  repeated Product products = 1;
  int64 total_count = 2;
}

// -------------------- Purchases --------------------------------
message PurchaseItem {
  string product_id = 1;
  int32 quantity = 2;
  double purchase_price = 3; // Changed to double
}

message PurchaseRequest {
  string supplier_id = 1;
  string purchased_by = 2;
  string description = 3;
  string payment_method = 4;
  string company_id = 5; // Company ID added
  string branch_id = 6; // Added branch_id
  repeated PurchaseItem items = 7;
}

message PurchaseResponse {
  string id = 1;
  string supplier_id = 2;
  string purchased_by = 3;
  double total_cost = 4; // Changed to double
  string description = 5;
  string payment_method = 6;
  string company_id = 7; // Company ID added
  string branch_id = 8; // Added branch_id
  string created_at = 9;
  repeated PurchaseItemResponse items = 10;
  string supplier_name = 11;
  string purchaser_phone_number = 12;
}

message PurchaseItemResponse {
  string id = 1;
  string purchase_id = 2;
  string product_id = 3;
  int32 quantity = 4;
  double purchase_price = 5; // Changed to double
  double total_price = 6; // Changed to double
  string product_name = 7;
  string product_image = 8;
}

message PurchaseID {
  string id = 1;
  string company_id = 2; // Company ID added
  string branch_id = 3; // Added branch_id
}

message FilterPurchase {
  string product_name = 1;
  string supplier_id = 2;
  string purchased_by = 3;
  string company_id = 4; // Company ID added
  string created_at = 5;
  string branch_id = 6; // Added branch_id
  int64 limit = 7;
  int64 page = 8;
  string description = 9;
}

message PurchaseList {
  repeated PurchaseResponse purchases = 1;
  int64 total_count = 2;
}

message PurchaseUpdate {
  string id = 1;
  string supplier_id = 2;
  string description = 3;
  string payment_method = 4;
  string company_id = 5; // Company ID added
  string branch_id = 6; // Added branch_id
}

// -------------------- Sales ------------------------------------
message SalesItem {
  string id = 1;
  string sale_id = 2;
  string product_id = 3;
  int32 quantity = 4;
  double sale_price = 5; // Changed to double
  double total_price = 6; // Changed to double
  string product_name = 7;
  string product_image = 8;
}

message SaleRequest {
  string company_id = 1; // Company ID added
  string branch_id = 2; // Added branch_id
  string sold_by = 3;
  string client_id = 4;
  string payment_method = 5;
  bool is_for_debt = 6;
  double paid_amount = 7;
  repeated SalesItem sold_products = 8;
  string client_name = 9;
  string client_phone = 10;
}

message SaleResponse {
  string id = 1;
  string client_id = 2;
  string client_name = 3;
  string client_phone_number = 4;
  string sold_by = 5;
  string sold_by_name = 6;
  double total_sale_price = 7; // Changed to double
  string payment_method = 8;
  string company_id = 9; // Company ID added
  string branch_id = 10; // Added branch_id
  string created_at = 11;
  repeated SalesItem sold_products = 12;
}

message SaleUpdate {
  string id = 1;
  string client_id = 2;
  string payment_method = 3;
  string company_id = 4; // Company ID added
  string branch_id = 5; // Added branch_id
}

message SaleID {
  string id = 1;
  string company_id = 2; // Company ID added
  string branch_id = 3; // Added branch_id
}

message SaleFilter {
  string start_date = 1;
  string end_date = 2;
  string client_id = 3;
  string sold_by = 4;
  string company_id = 5; // Company ID added
  int64 limit = 6;
  int64 page = 7;
  string branch_id = 8; // Added branch_id
  string product_name = 9;
}

message SaleList {
  repeated SaleResponse sales = 1;
  int64 total_count = 2;
}

message StatisticReq {
  string start_date = 1;
  string end_date = 2;
  string company_id = 3;
  string branch_id = 4; // Added branch_id
  string description = 5;
  int64 limit = 6;
  int64 page = 7;
}

message PriceProducts {
  string company_id = 1;
  string branch_id = 2; // Added branch_id
  repeated Price sum = 3;
}

message Price {
  string many_type = 1;
  double total_price = 2;
}


message MostSoldProductsRequest {
  string company_id = 1;
  string start_date = 2; // ISO 8601 format: YYYY-MM-DD
  string end_date = 3;   // ISO 8601 format: YYYY-MM-DD
  string branch_id = 4;  // Added branch_id
}

message DailySales {
  string day = 1;
  string product_name = 2;
  int64 total_quantity = 3;
}

message GetTopEntitiesRequest {
  string company_id = 1;
  string start_date = 2;
  string end_date = 3;
  int32 limit = 4; // Number of top entities to fetch
  string branch_id = 5; // Added branch_id
}

message TopEntity {
  string supplier_id = 1;
  double total_value = 2; // Total value of products purchased
}

message GetTopEntitiesResponse {
  repeated TopEntity entities = 1;
}

message MostSoldProductsResponse {
  repeated DailySales daily_sales = 1;
}

message CashFlowRequest {
  string user_id = 1;
  double amount = 2;
  string description = 3;
  string payment_method = 4;
  string company_id = 5;
  string branch_id = 6; // Added branch_id
}

message CashFlow {
  string id = 1;
  string user_id = 2;
  string transaction_date = 3;
  double amount = 4;
  string transaction_type = 5;
  string description = 6;
  string payment_method = 7;
  string company_id = 8;
  string branch_id = 9; // Added branch_id
}

message ListCashFlow {
  repeated CashFlow cash = 1;
  int64 total_count = 2;
}

message TransfersProductsReq {
  string product_id = 1;
  int64 product_quantity = 2;
}

message TransferReq {
  string transferred_by = 1;
  string from_branch_id = 2;
  string to_branch_id = 3;
  string description = 4;
  repeated TransfersProductsReq products = 5;
  string company_id = 6;
}

message TransfersProducts {
  string id = 1;
  string product_id = 2;
  int64 product_quantity = 3;
  string product_name = 4;
  string product_image = 5;
}

message Transfer {
  string id = 1;
  string transferred_by = 2;
  string from_branch_id = 3;
  string to_branch_id = 4;
  string description = 5;
  repeated TransfersProducts products = 6;
  string created_at = 7;
  string company_id = 8;
}

message TransferID {
  string id = 1;
  string company_id = 2;
}

message TransferFilter {
  int64 limit = 1;
  int64 page = 2;
  string branch_id = 3;
  string product_name = 4;
  string company_id = 5;
}

message TransferList {
  repeated Transfer transfers = 1;
  int64 total_count = 2;
}

message SaleStatisticsReq {
  string period = 1;
  string start_date = 2;
  string end_date = 3;
  string company_id = 4;
  string branch_id = 5;
}

message SaleStatisticsDate {
  string date = 1;
  repeated Price values = 2;
}

message SaleStatistics {
  string time_period = 1;
  repeated SaleStatisticsDate data = 2;
  double total = 3;
  string branch_id = 4;
  string company_id = 5;
}

message BranchIncomeReq {
  string start_date = 1;
  string end_date = 2;
  string company_id = 3;
}

message BranchIncomeData {
  string branch_id = 1; // ID филиала
  repeated Price values = 2; // Список доходов по методам оплаты
}

message BranchIncomeRes {
  repeated BranchIncomeData data = 1; // Доходы по филиалам
  double total = 2; // Общий доход по всем филиалам
}

// -------------------- Services ---------------------------------
service Products {

  // ------------ Product Category ----------------------------
  rpc CreateCategory(CreateCategoryRequest) returns (Category);
  rpc UpdateCategory(UpdateCategoryRequest) returns (Category);
  rpc DeleteCategory(GetCategoryRequest) returns (Message);
  rpc GetCategory(GetCategoryRequest) returns (Category);
  rpc GetListCategory(CategoryName) returns (CategoryList);

  // ------------- Products -----------------------------------
  rpc CreateProduct(CreateProductRequest) returns (Product);
  rpc CreateBulkProducts(CreateBulkProductsRequest) returns (BulkCreateResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (Product);
  rpc DeleteProduct(GetProductRequest) returns (Message);
  rpc GetProduct(GetProductRequest) returns (Product);
  rpc GetProductList(ProductFilter) returns (ProductList);

  // -------------- Purchases ---------------------------------
  rpc CreatePurchase(PurchaseRequest) returns (PurchaseResponse);
  rpc GetPurchase(PurchaseID) returns (PurchaseResponse);
  rpc GetListPurchase(FilterPurchase) returns (PurchaseList);
  rpc UpdatePurchase(PurchaseUpdate) returns (PurchaseResponse);
  rpc DeletePurchase(PurchaseID) returns (Message);


  // ------------------ Sales ---------------------------------
  rpc CalculateTotalSales(SaleRequest) returns (SaleResponse);
  rpc CreateSales(SaleRequest) returns (SaleResponse);
  rpc UpdateSales(SaleUpdate) returns (SaleResponse);
  rpc GetSales(SaleID) returns (SaleResponse);
  rpc GetListSales(SaleFilter) returns (SaleList);
  rpc DeleteSales(SaleID) returns (Message);

  // -------------------- Cash Flow ----------------------------
  rpc GetCashFlow(StatisticReq) returns (ListCashFlow);
  rpc CreateIncome(CashFlowRequest) returns (CashFlow);
  rpc CreateExpense(CashFlowRequest) returns (CashFlow);

  rpc GetTotalIncome(StatisticReq) returns (PriceProducts);
  rpc GetTotalExpense(StatisticReq) returns (PriceProducts);
  rpc GetNetProfit(StatisticReq) returns (PriceProducts);

  //------------------- Product Transfers --------------------

  rpc CreateTransfers(TransferReq) returns (Transfer);
  rpc GetTransfers(TransferID) returns (Transfer);
  rpc GetTransferList(TransferFilter) returns (TransferList);

  // ------------------- statistics --------------------------
  rpc TotalPriceOfProducts(StatisticReq) returns (PriceProducts);
  rpc TotalSoldProducts(StatisticReq) returns (PriceProducts);
  rpc TotalPurchaseProducts(StatisticReq) returns (PriceProducts);

  rpc GetMostSoldProductsByDay (MostSoldProductsRequest) returns (MostSoldProductsResponse);

  rpc GetTopClients(GetTopEntitiesRequest) returns (GetTopEntitiesResponse);
  rpc GetTopSuppliers(GetTopEntitiesRequest) returns (GetTopEntitiesResponse);

  // ------------------------ Graph Statistics -----------------
  rpc GetSaleStatistics(SaleStatisticsReq) returns (SaleStatistics);
  rpc GetBranchIncome(BranchIncomeReq) returns (BranchIncomeRes);
}
