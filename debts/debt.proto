syntax = "proto3";

package debts;


option go_package = "internal/generated/debts";

// ----------------------- Service --------------------
service DebtsService {

  rpc AddClient(CreateClients) returns (Client);
  rpc GetClient(ClientID) returns (Client);
  rpc UpdateClient(ClientUpdate) returns (Client);
  rpc GetAllClients(FilterClient) returns (ClientList);

  rpc CreateDebts(DebtsRequest) returns (Debts);
  rpc GetDebts(DebtsID) returns (Debts);
  rpc PayDebts(PayDebtsReq) returns (Debts);
  rpc GetListDebts(FilterDebts) returns (DebtsList);

  rpc GetClientDebts(ClientID) returns (DebtsList);
  rpc GetUserTotalDebtSum(ClientID) returns (SumMoney);
  rpc GetTotalDebtSum(CompanyID) returns (SumMoney);

  rpc GetPayment(PaymentID) returns (Payment);
  rpc GetPaymentsByDebtsId(PayDebtsID) returns (PaymentList);
  rpc GetPayments(FilterPayment) returns (PaymentList);
  rpc GetUserPayments(ClientID) returns (UserPaymentsRes);

  rpc GetDebtsForExel(FilterExelDebt) returns (ExelDebtsList);
}

// ----------------------- Messages -------------------

message ExelDebtsList {
  repeated ExelDebts debts = 1;
}

message ExelDebts {
  string client_id = 1;
  string client_full_name = 2;
  string client_phone = 3;
  double total_amount = 4;
  double amount_paid = 5;
  double debts_balance = 6;
  string last_payment_date = 7;
  string currency_code = 8;
  string company_id = 9;
}

message FilterExelDebt {
  string currency = 1;
  string company_id = 3;
}

message UserPaymentsRes {
  repeated Payments payments = 1;
}

message Payments {
  string debt_id = 1;
  string payment_id = 2;
  string payment_date = 3;
  double payment_amount = 5;
  string pay_type = 6;
}

message CompanyID {
  string id = 1;
  string debt_type = 2;
}

message SumMoney {
  string company_id = 1;
  repeated Money sum = 2;
}

message Money {
  string currency = 1;
  double sum = 2;
}

message PaymentList {
  repeated Payment payments = 1;
}

message   Payment {
  string id = 1;
  string installment_id = 2;
  string payment_date = 3;
  string pay_type = 4;
  double payment_amount = 5;
  string created_at = 6;
}

message PaymentID {
  string id = 1;
  string company_id = 2;
}

message FilterPayment {
  string installment_id = 1;
  string start_date = 2;
  string end_date = 3;
  string company_id = 4;
}

// Debts Messages
message DebtsList {
  repeated Debts installments = 1;
  int64 total_count = 2;
}

message FilterDebts {
  string is_fully_pay = 1;
  bool no_paid_debt = 2;
  string currency_code = 3;
  string description = 4;
  int32 page = 5;
  int32 limit = 6;
  string debt_type = 7;
  string company_id = 8;
}

message PayDebtsReq {
  string debt_id = 1;
  string pay_type = 2;
  double paid_amount = 3;
  string company_id = 4;
}

message DebtsID {
  string id = 1;
  string company_id = 2;
}

message PayDebtsID {
  string id = 1;
  string pay_type = 2;
}

message Debts {
  string id = 1;
  string client_id = 2;
  string client_name = 3;
  string client_phone = 4;
  string sale_id = 5;
  double total_amount = 6;
  double amount_paid = 7;
  double balance_of_debt = 8;
  string last_payment_date = 9;
  bool is_fully_paid = 10;
  string currency_code = 11;
  string debt_type = 12;
  string should_pay_at = 13;
  string created_at = 14;
  string company_id = 15;
}

message DebtsRequest {
  string client_id = 1;
  string sale_id = 2;
  double total_amount = 3;
  string currency_code = 4;
  string debt_type = 5; // creditor or debtor
  string should_pay_at = 6;
  string company_id = 7;
}


// ---------- Client messages --------------
message ClientList {
  repeated Client clients = 1;
}

message FilterClient {
  string full_name = 1;
  string phone_number = 2;
  string address = 3;
  string telegram_username = 4;
  bool has_debt = 5;
  string client_status = 6;
  string notes = 7;
  int32 page = 8;
  int32 offset = 9;
}

message ClientUpdate {
  string id = 1;
  string full_name = 2;
  string phone_number = 3;
  string address = 4;
  bool has_debt = 5;
  string notes = 6;
}

message ClientID {
  string company_id = 1;
  string id = 2;
  string debt_type = 3;
}

message Client {
  string id = 1;
  string full_name = 2;
  string phone_number = 3;
  string address = 4;
  string telegram_username = 5;
  string telegram_user_id = 6;
  bool has_debt = 7;
  string client_status = 8;
  string notes = 9;
  string created_at = 10;
}

message CreateClients {
  string id = 1;
  string full_name = 2;
  string phone_number = 3;
  string address = 4;
  string telegram_username = 5;
  string notes = 6;
}
message Error {
  string message = 1;
}